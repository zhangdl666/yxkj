<?php
/**
 * Author: ' Silent
 * Time: 2017/9/20 9:50
 */

namespace Wx\Controller;

use Pc\Model\DeviceRunModel;
use Pc\Model\HotelModel;
use Pc\Model\RunInfoDataModel;
use Pc\Model\RunInfoModel;
use Pc\Model\SalesModel;
use Pc\Model\UserRoleModel;
use Pc\Server\DateType;
use Wx\Model\UserObjModel;
use Think\Controller;

class RunInfoController extends BaseController
{
    private $user_id;
    private $role_id;
    public $model = 'User';

    public function _initialize()
    {
        // TODO: Change the autogenerated stub
//        $this->assign('role', $this->identity()->getRoleId());
        $this->assign('role',$this->identity()->getRoleId());
        $this->role_id = $this->identity()->getRoleId();
        $this->user_id = $this->identity()->getUserid();
//        $this->user_id = 5;
        parent::_initialize();
    }


    /**
     * 获取登录用户对象
     * @return type
     */
    public function identity()
    {
        if (!$this->userObj) {
            $this->userObj = new UserObjModel();
        }
        return $this->userObj;
    }

    public function getListInfo()
    {
        $hotelData = HotelModel::getHotelName();
        $roomData = RunInfoDataModel::getHotelRoom($this->user_id);
        $datas = DeviceRunModel::DevsRunInfos($roomData);
        if ($this->role_id == 11 || $this->role_id == 12) {
            $hotel_id = M('User')->where(array('id' => $this->user_id))->getField('hotel_id');
        }
        $listdatas = $this->getHotelRunInfo($hotel_id);
        $hotelname = HotelModel::getHotelNames($this->user_id);
        if (empty($listdatas)) {
            $date = json_encode(i_array_column(DateType::getUpwardDate(), 'time'));
            $rpm25list = json_encode(i_array_column(DateType::getPm25(), 'pm25'));
            $this->assign('rpm25', $rpm25list);
        } else {
            $date = json_encode(i_array_column($listdatas, 'time'));
        }
        $allDatas = \Pc\Controller\RunInfoController::getHotelAllTimes($hotel_id);  // 获取开启运行时间统计
        $this->assign('hours',$allDatas['allHours']);
        $this->assign('pm',$allDatas['pm']);
        $this->assign('day',ceil($allDatas['day']));
        $this->assign('allday',$allDatas['allDay']);
        $this->assign('hours',$allDatas['allHours']);
        $this->assign('date', $date);
        $this->assign('hotelname', $hotelname);
        $this->assign('rundata', json_encode(i_array_column($listdatas, 'indoor_pm')));
        $this->assign('datas', $datas);
        $this->assign('hotelData', $hotelData);
        $this->display('index');
    }

//    public function getRunInfoData($user_id = '', $hotel_id = '')
//    {
//        if ($hotel_id) {
//            $roomdata = RunInfoDataModel::getHotelRooms($hotel_id);
//        } else {
//            $roomdata = RunInfoDataModel::getHotelRoom($user_id);
//        }
//
//        $listArray = array();
//        foreach ($roomdata as $key => $val) {
//            $num = ceil(($key + 2) / 100);
//            // 产品经理当日下午两点到次日两点
//            $beginTodays = mktime(14, 0, 0, date('m'), date('d'), date('Y'));
//            if (time() < $beginTodays) {
//                // 获取昨天的数据
//                $beginToday = mktime(14, 0, 0, date('m'), date('d'), date('Y'));
//                $beginToday = strtotime(date('Y-m-d H:i:s', strtotime("-1 day", $beginToday)));
//                $endToday = time();
//            } else {
//                $beginToday = mktime(14, 0, 0, date('m'), date('d'), date('Y'));
//                $endToday = strtotime(date('Y-m-d H:i:s', strtotime("+1 day", $beginToday)));
//            }
//            $where['upload_time'] = array(array('gt', $beginToday), array('lt', $endToday), 'AND');
//            $where['device_code'] = $val['equipment_sno'];
//            $datas = M('UploadDeviceInfo_' . $num)->where($where)->field("upload_times,indoor_pm")->select();
//            foreach ($datas as $keys => &$vals) {
//                $vals['sort_times'] = strtotime($vals['upload_times']);
//                $vals['group_times'] = date('Y-m-d/H', strtotime($vals['upload_times']));
//            }
//            $listArray[] = $datas;
//        }
//        $result = [];
//        array_map(function ($value) use (&$result) {
//            $result = array_merge($result, array_values($value));
//        }, $listArray);
//        $listdata = arraySequence($result, 'sort_times', 'SORT_ASC');
//        $results = array();
//        foreach ($listdata as $k => $v) {
//            $results[$v['group_times']][] = $v;
//        }
//        $listAllDatas = array();
//        foreach ($results as $f => $h) {
//            $num = count($h);
//            $listAllDatas[$f]['num'] = ceil(array_sum(i_array_column($h, 'indoor_pm')) / $num);
//            $listAllDatas[$f]['date'] = $h[0]['group_times'];
//        }
//        return $listAllDatas;
//    }

    /**
     * 获取某家酒店总运行信息
     * @author ' Silent <1136359934@qq.com>
     */
    public function getHotelRunInfo($hotel_id)
    {
        $redis = new \Redis();
        $redis->connect('127.0.0.1');
        // 循环生成键值,查询
        $beginTodays = mktime(14, 0, 0, date('m'), date('d'), date('Y'));
        if (time() < $beginTodays) {
            // 获取昨天14点时间和现在时间
            $beginToday = mktime(14, 0, 0, date('m'), date('d'), date('Y'));
            $beginToday = strtotime(date('Y-m-d H:i:s', strtotime("-1 day", $beginToday)));
            $timeone = date('Y-m-d', $beginToday);
            $timetwo = date('Y-m-d', time());
            $listArray = array(
                array($timeone . '/14'), array($timeone . '/15'), array($timeone . '/16'), array($timeone . '/17'), array($timeone . '/18'), array($timeone . '/19'), array($timeone . '/20'), array($timeone . '/21'), array($timeone . '/22'), array($timeone . '/23'), array($timetwo . '/00'), array($timetwo . '/01'), array($timetwo . '/02'), array($timetwo . '/03'), array($timetwo . '/04'), array($timetwo . '/05'), array($timetwo . '/06'), array($timetwo . '/07'), array($timetwo . '/08'), array($timetwo . '/09'), array($timetwo . '/10'), array($timetwo . '/11'), array($timetwo . '/12'), array($timetwo . '/13'),
            );
            // 获取酒店的数据
            $listRun = array();
            foreach ($listArray as $key => $val) {
                $str = $val[0] . '_76';
                if ($redis->exists($str)) {
                    $data = $redis->hGetAll($str);
                    $listRun[$key]['indoor_pm'] = ceil($data['indoor_pm'] / $data['num']);
                    $listRun[$key]['outdoor_pm'] = ceil($data['outdoor_pm'] / $data['num']);
                    $listRun[$key]['time'] = $val[0];
                } else {
                    $listRun[$key]['indoor_pm'] = 0;
                    $listRun[$key]['outdoor_pm'] = 0;
                    $listRun[$key]['time'] = $val[0];
                }
            }
            return $listRun;
        } else {
            // 获取今天14点时间到明天时间
            $beginToday = mktime(14, 0, 0, date('m'), date('d'), date('Y'));
            $timeone = date('Y-m-d', $beginToday);
            $endToday = strtotime(date('Y-m-d H:i:s', strtotime("+1 day", $beginToday)));
            $timetwo = date('Y-m-d', $endToday);
            $listArray = array(
                array($timeone . '/14'), array($timeone . '/15'), array($timeone . '/16'), array($timeone . '/17'), array($timeone . '/18'), array($timeone . '/19'), array($timeone . '/20'), array($timeone . '/21'), array($timeone . '/22'), array($timeone . '/23'), array($timetwo . '/00'), array($timetwo . '/01'), array($timetwo . '/02'), array($timetwo . '/03'), array($timetwo . '/04'), array($timetwo . '/05'), array($timetwo . '/06'), array($timetwo . '/07'), array($timetwo . '/08'), array($timetwo . '/09'), array($timetwo . '/10'), array($timetwo . '/11'), array($timetwo . '/12'), array($timetwo . '/13'),
            );
            // 获取酒店的数据
            $listRun = array();
            foreach ($listArray as $key => $val) {
                $str = $val[0] . '_' . $hotel_id;
                if ($redis->exists($str)) {
                    $data = $redis->hGetAll($str);
                    $listRun[$key]['indoor_pm'] = ceil($data['indoor_pm'] / $data['num']);
                    $listRun[$key]['outdoor_pm'] = ceil($data['outdoor_pm'] / $data['num']);
                    $listRun[$key]['time'] = $val[0];
                } else {
                    $listRun[$key]['indoor_pm'] = 0;
                    $listRun[$key]['outdoor_pm'] = 0;
                    $listRun[$key]['time'] = $val[0];
                }
            }
            return $listRun;
        }
    }

    /**
     * 获取某家酒店指定时间运行信息
     * @author ' Silent <1136359934@qq.com>
     */
    public function getHotelTimeRunInfo($time, $hotel)
    {
        $redis = new \Redis();
        $redis->connect('127.0.0.1');
        $dates = $time . ' 14:00:00';
        $beginToday = strtotime($dates);
        if(time() < $beginToday){
            $beginToday = strtotime(date('Y-m-d H:i:s', strtotime("-1 day", $beginToday)));
            $timeone = date('Y-m-d', $beginToday);
            $timetwo = date('Y-m-d', time());
        }else{
            $timeone = date('Y-m-d', $beginToday);
            $endToday = strtotime(date('Y-m-d H:i:s', strtotime("+1 day", $beginToday)));
            $timetwo = date('Y-m-d', $endToday);
        }
        $listArray = array(
            array($timeone . '/14'), array($timeone . '/15'), array($timeone . '/16'), array($timeone . '/17'), array($timeone . '/18'), array($timeone . '/19'), array($timeone . '/20'), array($timeone . '/21'), array($timeone . '/22'), array($timeone . '/23'), array($timetwo . '/00'), array($timetwo . '/01'), array($timetwo . '/02'), array($timetwo . '/03'), array($timetwo . '/04'), array($timetwo . '/05'), array($timetwo . '/06'), array($timetwo . '/07'), array($timetwo . '/08'), array($timetwo . '/09'), array($timetwo . '/10'), array($timetwo . '/11'), array($timetwo . '/12'), array($timetwo . '/13'),
        );
        // 获取酒店的数据
        $listRun = array();
        foreach ($listArray as $key => $val) {
            $str = $val[0] . '_' . $hotel;
            if ($redis->exists($str)) {
                $data = $redis->hGetAll($str);
                $listRun[$key]['indoor_pm'] = ceil($data['indoor_pm'] / $data['num']);
                $listRun[$key]['outdoor_pm'] = ceil($data['outdoor_pm'] / $data['num']);
                $listRun[$key]['time'] = $val[0];
            } else {
                $listRun[$key]['indoor_pm'] = 0;
                $listRun[$key]['outdoor_pm'] = 0;
                $listRun[$key]['time'] = $val[0];
            }
        }
        return $listRun;
    }

    public function getHotelDatas($id)
    {
        $listdatas = $this->getHotelRunInfo($id);
        if (empty($listdatas)) {
            $date = json_encode(i_array_column(DateType::getUpwardDate(), 'time'));
            $rpm25list = json_encode(i_array_column(DateType::getPm25(), 'pm25'));
            $this->assign('rpm25', $rpm25list);
        } else {
            $date = json_encode(i_array_column($listdatas, 'time'));
        }
        $allDatas = \Pc\Controller\RunInfoController::getHotelAllTimes($id);  // 获取开启运行时间统计
        $this->assign('hours',$allDatas['allHours']);
        $this->assign('pm',$allDatas['pm']);
        $this->assign('day',ceil($allDatas['day']));
        $this->assign('allday',$allDatas['allDay']);
        $this->assign('hours',$allDatas['allHours']);
        $this->assign('date', $date);
        $this->assign('rundatas', json_encode(i_array_column($listdatas, 'indoor_pm')));
        $this->display('OneDevicehotel');
    }

    /**
     * 单个设备运行情况
     */
    public function getOneDevice()
    {
        $mac = I('get.mac', '', 'trim');
        $hotel_id = M('Device')->where(array('mac' => $mac))->getField('h_id');
        $listAllDatas = $this->getRoomsTimeRunInfo('',$hotel_id,$mac);
        if (empty($listAllDatas)) {
            $date = json_encode(i_array_column(DateType::getUpwardDate(), 'time'));
            $rpm25list = json_encode(i_array_column(DateType::getPm25(), 'pm25'));
            $this->assign('rpm25', $rpm25list);
        } else {
            $date = json_encode(i_array_column($listAllDatas, 'time'));
        }
        $datadevice = M('OperInfo')->where(array('equipment_sno' => $mac))->find();
        $pm2 = DeviceRunModel::OneDevices($mac);
        if ($pm2 == '-1') {
            $status = -1;
        } else if ($pm2 == 0) {
            $status = 1;
        } else {
            $status = testingPm($pm2);
        }
        $data = RunInfoModel::getDevicesTime($mac);
        $pm = DeviceRunModel::OneDevices($mac);
        if ($pm == -1) {
            $pm = 0;
        }
        $this->assign('data',$data);
        $type = M('RoomType')->where(array('id' => $datadevice['rt_id']))->getField('name');
        $this->assign('type', $type);
        $this->assign('status', $status);
        $this->assign('datadevice', $datadevice);
        $this->assign('date', $date);
        $this->assign('pm25', json_encode(i_array_column($listAllDatas, 'indoor_pm')));
        $this->display('OneDevice');
    }

    /**
     * 获取某个设备指定时间运行信息
     * @author ' Silent <1136359934@qq.com>
     */
    public function getRoomsTimeRunInfo($time, $hotel, $rooms)
    {
        $redis = new \Redis();
        $redis->connect('127.0.0.1');
        $dates = $time . ' 14:00:00';
        $beginToday = strtotime($dates);
        if(time() < $beginToday){
            $beginToday = strtotime(date('Y-m-d H:i:s', strtotime("-1 day", $beginToday)));
            $timeone = date('Y-m-d', $beginToday);
            $timetwo = date('Y-m-d', time());
        }else{
            $timeone = date('Y-m-d', $beginToday);
            $endToday = strtotime(date('Y-m-d H:i:s', strtotime("+1 day", $beginToday)));
            $timetwo = date('Y-m-d', $endToday);
        }
        $listArray = array(
            array($timeone . '/14'), array($timeone . '/15'), array($timeone . '/16'), array($timeone . '/17'), array($timeone . '/18'), array($timeone . '/19'), array($timeone . '/20'), array($timeone . '/21'), array($timeone . '/22'), array($timeone . '/23'), array($timetwo . '/00'), array($timetwo . '/01'), array($timetwo . '/02'), array($timetwo . '/03'), array($timetwo . '/04'), array($timetwo . '/05'), array($timetwo . '/06'), array($timetwo . '/07'), array($timetwo . '/08'), array($timetwo . '/09'), array($timetwo . '/10'), array($timetwo . '/11'), array($timetwo . '/12'), array($timetwo . '/13'),
        );
        // 获取酒店的数据
        $listRun = array();
        foreach ($listArray as $key => $val) {
            $str = $val[0] . '_' . $hotel . '_' . $rooms;
            if ($redis->exists($str)) {
                $data = $redis->hGetAll($str);
                $listRun[$key]['indoor_pm'] = ceil($data['indoor_pm'] / $data['num']);
                $listRun[$key]['outdoor_pm'] = ceil($data['outdoor_pm'] / $data['num']);
                $listRun[$key]['time'] = $val[0];
            } else {
                $listRun[$key]['indoor_pm'] = 0;
                $listRun[$key]['outdoor_pm'] = 0;
                $listRun[$key]['time'] = $val[0];
            }
        }
        return $listRun;

    }


    /**
     * 获取运行时间
     * @author ' Silent <1136359934@qq.com>
     * @param $type
     * @param string $mac
     */
    public function getDeviceTimes($type, $rooms = '', $hotel_id = '')
    {
        if ($type == 1) {
            $roomdata = RunInfoDataModel::getHotelRooms($hotel_id);
            $data = RunInfoDataModel::getDevicesInfo('', $hotel_id, '');
            $data['hours'] = $data['allHours'];
            $data['allDay'] = $data['allDay'];
            $data['day'] = $data['day'];
            $pm = DeviceRunModel::DevsRunInPm25($roomdata);
        } else {
            $data = RunInfoModel::getDevicesTime($rooms);
            $pm = DeviceRunModel::OneDevices($rooms);
            if ($pm == -1) {
                $pm = 0;
            }
        }
        $this->assign('pm', $pm);
        $this->assign('data', $data);
        $this->display('deviceTime');
    }

    /**
     * 某日的运行情况
     */
    public function getOneData()
    {
        $date = I('get.date', '', 'trim');
        if ($this->role_id == 11 || $this->role_id == 12) {
            $hotel_id = M('User')->where(array('id' => $this->user_id))->getField('hotel_id');
        }else{
            $hotel_id = I('get.hotel_id');
        }
        $listdatas = $this->getHotelTimeRunInfo($date,$hotel_id);
        if (empty($listdatas)) {
            $date = json_encode(i_array_column(DateType::getUpwardDate(), 'time'));
            $rpm25list = json_encode(i_array_column(DateType::getPm25(), 'pm25'));
            $this->assign('rpm25', $rpm25list);
        } else {
            $date = json_encode(i_array_column($listdatas, 'time'));
        }
        $allDatas = \Pc\Controller\RunInfoController::getHotelAllTimes($hotel_id);  // 获取开启运行时间统计
        $data['day'] = ceil($allDatas['day']);
        $data['pm'] = $allDatas['pm'];
        $data['allDay'] = $allDatas['allDay'];
        $data['hours'] = $allDatas['allHours'];
        $this->assign('data',$data);
        $this->assign('date', $date);
        $this->assign('rundatas', json_encode(i_array_column($listdatas, 'indoor_pm')));
        $this->display('OneDevices');
    }

    public function gethotelroom($id = '')
    {
        if ($id) {
            $roomData = RunInfoDataModel::getHotelRooms($id);
        } else {
            $roomData = RunInfoDataModel::getHotelRoom($this->user_id);
        }
        $data = DeviceRunModel::DevsRunInfos($roomData);
        $list['code'] = 1;
        $list['data'] = $data;
        $this->ajaxReturn($list);
    }


    /**
     * 开启情况
     */
    public function getDevicesInfo()
    {
        $date = I('get.date');
        $hotel_id = I('get.hotel_id');
        if ($hotel_id) {
            $HotelRoom = RunInfoDataModel::getHotelRooms($hotel_id);
        } else {
            $HotelRoom = RunInfoDataModel::getHotelRoom($this->user_id);
        }

        // 开始时间
        $startTime = date('Y-m-d H:i:s', $HotelRoom[0]['ctime']);
        // 结束时间
        $endTime = date('Y-m-d H:i:s', time());


        $date = date("Y-m-d");
        $firstday = date('Y-m-01', strtotime($date));
        $firstdays = strtotime(date('Y-m-01', strtotime($date)));
        $lastday = strtotime(date('Y-m-d', strtotime("$firstday +1 month -1 day")));
        // 统计所有房间
        $monthsbai = 0;
        $jidubai = 0;
        $nianbai = 0;
        $anbai = 0;
        $anbais = 0;
        $hahdaya = 0;
        foreach ($HotelRoom as $key => &$val) {
            // 获取设备最新状态
            $data = RunInfoModel::getNewDevicesInfo($val['equipment_sno']);
            if ($data['data']['devices'][0]['info']['online'] == 0 && $data['data']['devices'][0]['info']['power'] == 0) {
                $val['status'] = 1;
            } else {
                // 算出是否达到了一个天次
                $dates = $date . ' 14:00:00';
                $beginToday = strtotime($dates);
                $endToday = strtotime(date('Y-m-d H:i:s', strtotime("+1 day", $beginToday)));
                $datas = RunInfoModel::getDevicesHoures($val['equipment_sno'], 7 * 24);
                $infodata = array();
                foreach ($datas['data']['hours'] as $keys => $vals) {
                    if ($vals['date'] > $beginToday && $vals['date'] < $endToday) {
                        $infodata[] = $vals;
                    }
                }
                if ($infodata == 24) {
                    $val['status'] = 2;
                } else {
                    $val['status'] = 3;
                }

                $deviceData = RunInfoModel::getDevicesHoures($val['equipment_sno']);
                $monthDay = $deviceData['data']['hours'];
                $monthDays = array();
                // 算出开启天数

                // 算出本月度开启率
                $num = 0;
                foreach ($monthDay as $month => &$days) {
                    if ($days['date'] > $firstdays && $days['date'] < $lastday) {
                        $days['key'] = $num++;
                        $monthDays[] = $days;
                    }
                }
                $numone = ($this->chaifenshuzu($monthDays, 1));
                $monthsbai += ($numone / 30);
                // 算出本季度开启率
                $season = ceil(date('n') / 3);
                $startTimeone = strtotime(date('Y-m-01', mktime(0, 0, 0, ($season - 1) * 3 + 1, 1, date('Y'))));
                $endTimeone = strtotime(date('Y-m-t', mktime(0, 0, 0, $season * 3, 1, date('Y'))));
                $jiduDays = array();
                foreach ($monthDay as $months => &$dayss) {
                    if ($dayss['date'] > $startTimeone && $dayss['date'] < $endTimeone) {
                        $days['key'] = $num++;
                        $jiduDays[] = $dayss;
                    }
                }
                $numtwo = ($this->chaifenshuzu($jiduDays));
                $jidubai += ($numtwo / 120);
                // 算出本年度开启率
                $startTimetwo = strtotime(date('Y-01-01'));
                $endTimetwo = strtotime(date('Y-12-31'));
                $nianDays = array();
                foreach ($monthDay as $nians => &$n) {
                    if ($n['date'] > $startTimetwo && $n['date'] < $endTimetwo) {
                        $n['key'] = $num++;
                        $nianDays[] = $n;
                    }
                }
                $numthree = ($this->chaifenshuzu($nianDays));
                $nianbai += ($numthree / 365);
                // 安装日到现在开启率
                $startThree = $val['ctime'];
                $endThree = time();
                $anzhuanDays = array();
                foreach ($monthDay as $nianss => &$ns) {
                    if ($ns['date'] > $startThree && $ns['date'] < $endThree) {
                        $ns['key'] = $num++;
                        $anzhuanDays[] = $ns;
                    }
                }
                $numfour = ($this->chaifenshuzu($anzhuanDays));
//                $hahdaya += $numfour;
                $dayxx = ($endThree - $startThree) / 86400;
                $anbai += ($numfour / $dayxx);
                // 结算周期开启率
                $date = date("Y-m-d");
                $startfour = strtotime(date('Y-m-01', strtotime($date)));
                $endfour = time();
                $anzhuanDa = array();
                foreach ($monthDay as $niansss => &$nss) {
                    if ($nss['date'] > $startfour && $nss['date'] < $endfour) {
                        $nss['key'] = $num++;
                        $anzhuanDa[] = $nss;
                    }
                }
                // 结算周期开启天次
                $numfive = ($this->chaifenshuzu($anzhuanDa));
                $hahdaya += $numfive;
                $dayxxx = ($endfour - $startfour) / 86400;
                $anbais += ($numfive / $dayxxx);
            }
        }
        $this->assign('rooms', $HotelRoom);
        $this->assign('monthsbai', filter_money($monthsbai));
        $this->assign('jidubai', filter_money($jidubai));
        $this->assign('nainbai', filter_money($nianbai));
        $this->assign('anbai', filter_money($anbai));
        $this->assign('anbais', filter_money($anbais));
        $this->assign('hahdats', $hahdaya);
        $this->assign('time', time());
        $this->assign('date', $date);
        $this->display('getDevicesInfo');
    }

    /**
     * 拆分数组
     * @param $data
     * @param $type
     */
    public function chaifenshuzu($data)
    {
        $num = 0;
        // 规则从今天14点到明天14点
        foreach ($data as $key => $val) {
            // 截取字符串,开始到结束
            if (substr($val['fulldate'], 11, 2) == 14 && substr($data[$key + 24]['fulldate'], 11, 2) == 14) {
                $num++;
            }
        }
        return $num;
    }

    /**
     * 酒店筛选
     */
    public function getHotelData($id)
    {
        $data = RunInfoDataModel::getDevicesInfos($id);
        $listdatas = RunInfoDataModel::getRunInfoDatas($id);
        $this->assign('date', json_encode(i_array_column($listdatas, 'fulldate')));
        $this->assign('rundatas', json_encode(i_array_column($listdatas, 'pm25')));
        $this->assign('pm', $data['pm']);
        $this->assign('data', $data['data']);
        $this->assign('hours', $data['allHours']);
        $this->assign('day', $data['day']);
        $this->assign('allday', $data['allDay']);
        $this->display('OneDevices');
    }

    public function oneDevice($sno)
    {
        $date = I('get.date');
        $date = date("Y-m-d");
        $firstday = date('Y-m-01', strtotime($date));
        $firstdays = strtotime(date('Y-m-01', strtotime($date)));
        $lastday = strtotime(date('Y-m-d', strtotime("$firstday +1 month -1 day")));
        // 获取设备最新状态
        $data = RunInfoModel::getNewDevicesInfo($sno);
        $deviceDatas = M('OperInfo')->where(array('equipment_sno' => $sno))->find();
        if ($data['data']['devices'][0]['info']['online'] == 0 && $data['data']['devices'][0]['info']['power'] == 0) {
            $val['status'] = 1;
        } else {
            // 算出是否达到了一个天次
            $dates = $date . ' 14:00:00';
            $beginToday = strtotime($dates);
            $endToday = strtotime(date('Y-m-d H:i:s', strtotime("+1 day", $beginToday)));
            $datas = RunInfoModel::getDevicesHoures($sno, 7 * 24);
            $infodata = array();
            foreach ($datas['data']['hours'] as $keys => $vals) {
                if ($vals['date'] > $beginToday && $vals['date'] < $endToday) {
                    $infodata[] = $vals;
                }
            }
            if ($infodata == 24) {
                $val['status'] = 2;
            } else {
                $val['status'] = 3;
            }

            $deviceData = RunInfoModel::getDevicesHoures($sno);
            $monthDay = $deviceData['data']['hours'];
            $monthDays = array();
            // 算出本月度开启率
            $num = 0;
            foreach ($monthDay as $month => &$days) {
                if ($days['date'] > $firstdays && $days['date'] < $lastday) {
                    $days['key'] = $num++;
                    $monthDays[] = $days;
                }
            }
            $numone = ($this->chaifenshuzu($monthDays, 1));
            $monthsbai = ($numone / 30);
            // 算出本季度开启率
            $season = ceil(date('n') / 3);
            $startTimeone = strtotime(date('Y-m-01', mktime(0, 0, 0, ($season - 1) * 3 + 1, 1, date('Y'))));
            $endTimeone = strtotime(date('Y-m-t', mktime(0, 0, 0, $season * 3, 1, date('Y'))));
            $jiduDays = array();
            foreach ($monthDay as $months => &$dayss) {
                if ($dayss['date'] > $startTimeone && $dayss['date'] < $endTimeone) {
                    $days['key'] = $num++;
                    $jiduDays[] = $dayss;
                }
            }
            $numtwo = ($this->chaifenshuzu($jiduDays));
            $jidubai = ($numtwo / 120);
            // 算出本年度开启率
            $startTimetwo = strtotime(date('Y-01-01'));
            $endTimetwo = strtotime(date('Y-12-31'));
            $nianDays = array();
            foreach ($monthDay as $nians => &$n) {
                if ($n['date'] > $startTimetwo && $n['date'] < $endTimetwo) {
                    $n['key'] = $num++;
                    $nianDays[] = $n;
                }
            }
            $numthree = ($this->chaifenshuzu($nianDays));
            $nianbai = ($numthree / 365);
            // 安装日到现在开启率
            $startThree = $val['ctime'];
            $endThree = time();
            $anzhuanDays = array();
            foreach ($monthDay as $nianss => &$ns) {
                if ($ns['date'] > $startThree && $ns['date'] < $endThree) {
                    $ns['key'] = $num++;
                    $anzhuanDays[] = $ns;
                }
            }
            $numfour = ($this->chaifenshuzu($anzhuanDays));
            $dayxx = ($endThree - $startThree) / 86400;
            $anbai = ($numfour / $dayxx);
            // 结算周期开启率
            $date = date("Y-m-d");
            $startfour = strtotime(date('Y-m-01', strtotime($date)));
            $endfour = time();
            $anzhuanDa = array();
            foreach ($monthDay as $niansss => &$nss) {
                if ($nss['date'] > $startfour && $nss['date'] < $endfour) {
                    $nss['key'] = $num++;
                    $anzhuanDa[] = $nss;
                }
            }
            // 结算周期开启天次
            $numfive = ($this->chaifenshuzu($anzhuanDa));
            $hahdaya = $numfive;
            $dayxxx = ($endfour - $startfour) / 86400;
            $anbais = ($numfive / $dayxxx);
        }
        // 净化器,监控器类型
        // 净化器,监控器类型
        $rt_id = M(\Pc\Model\SalesModel::TABLENAME_OPER)->where(array('equipment_sno' => $sno))->getField('rt_id');
        $map = array();
        $map['l.equipment_sno'] = $sno;
        $map['h.rt_id'] = $rt_id;
        $e1_name = M(\Pc\Model\SalesModel::TABLENAME_OPER)->alias('l')
            ->join('left join ' . C('DB_PREFIX') . \Pc\Model\SalesModel::TABLENAME_ORDER . ' as z on z.id = l.oo_id')
            ->join('left join ' . C('DB_PREFIX') . \Pc\Model\SalesModel::TABLENAME_EMENT . ' as h on h.hc_id = z.hc_id')
            ->join('left join ' . C('DB_PREFIX') . \Pc\Model\SalesModel::TABLENAME_TYPE . ' as s on s.id = h.e1_id')
            ->where($map)
            ->field('s.name')->find();
        $e2_name = M(\Pc\Model\SalesModel::TABLENAME_OPER)->alias('l')
            ->join('left join ' . C('DB_PREFIX') . \Pc\Model\SalesModel::TABLENAME_ORDER . ' as z on z.id = l.oo_id')
            ->join('left join ' . C('DB_PREFIX') . \Pc\Model\SalesModel::TABLENAME_EMENT . ' as h on h.hc_id = z.hc_id')
            ->join('left join ' . C('DB_PREFIX') . \Pc\Model\SalesModel::TABLENAME_TYPE . ' as s on s.id = h.e2_id')
            ->where($map)
            ->field('s.name')->find();
        $this->assign('e1_name', $e1_name);
        $this->assign('e2_name', $e2_name);
        $this->assign('devicesData', $deviceDatas);
        $this->assign('monthsbai', filter_money($monthsbai));
        $this->assign('jidubai', filter_money($jidubai));
        $this->assign('nainbai', filter_money($nianbai));
        $this->assign('anbai', filter_money($anbai));
        $this->assign('anbais', filter_money($anbais));
        $this->assign('hahdats', $hahdaya);
        $this->assign('time', time());
        $this->assign('date', $date);
        $this->display('onedev');
    }

    public function test()
    {
        $this->display();
    }
}

